syntax = "proto3";
option go_package = "github.com/les-cours/learning-service/api/learning";
package learning;

message  OperationStatus{
  bool success = 1;
}

message Pdf {
  string pdfID = 1;
  string title = 2;
  string link = 3;
}

message Video {
  string videoID = 1;
  string title = 2;
  string link = 3;
}

message CreateClassRoomRequest {
  string teacherID = 1;
  string subjectID = 2;
}

message CreateClassRoomsRequest {
  string teacherID = 1;
  repeated string subjectIDs= 2;
}


message ClassRoom {
  string classRoomID = 1;
  string title = 2;
  string image = 3;
  int32 price = 4;
  string badge = 5;
  int32 studentCount = 6;
  float Rating = 7;
  Lessons lessons = 9;
}


message ClassRooms {
  repeated ClassRoom classrooms = 1;
}

message AddDocumentToClassroomRequest {
  string classRoomID = 1;
}

message GetByUUIDRequest{
  string id = 1;
}


message Lesson {
  string lessonID = 1;
  string title = 2;
  string  arabicTitle= 3;
}

message Lessons{
  repeated Lesson lessons = 1;
}

service LearningService {
  rpc CreateClassRooms(CreateClassRoomsRequest)returns (OperationStatus){}
  rpc CreateClassRoom(CreateClassRoomRequest)returns (ClassRoom){}
  rpc AddDocumentToClassroom(AddDocumentToClassroomRequest)returns (OperationStatus){}

  rpc GetClassRoomsBySubject(GetByUUIDRequest)returns (ClassRooms){}
  rpc GetClassRoom(GetByUUIDRequest)returns (ClassRoom){}

  rpc GetLessonsByClassRoom(GetByUUIDRequest)returns(Lessons){}
  rpc DeleteClassRoom(GetByUUIDRequest)returns(OperationStatus){}
  // rpc AddDocumentToClassroom()
  // rpc Add()returns (){}
}