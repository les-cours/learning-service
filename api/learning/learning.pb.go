// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: api/learning/learning.proto

package learning

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{0}
}

func (x *OperationStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type IDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID string `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{1}
}

func (x *IDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IDRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type Pdf struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PdfID string `protobuf:"bytes,1,opt,name=pdfID,proto3" json:"pdfID,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link  string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Pdf) Reset() {
	*x = Pdf{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pdf) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pdf) ProtoMessage() {}

func (x *Pdf) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pdf.ProtoReflect.Descriptor instead.
func (*Pdf) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{2}
}

func (x *Pdf) GetPdfID() string {
	if x != nil {
		return x.PdfID
	}
	return ""
}

func (x *Pdf) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Pdf) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID string `protobuf:"bytes,1,opt,name=videoID,proto3" json:"videoID,omitempty"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link    string `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{3}
}

func (x *Video) GetVideoID() string {
	if x != nil {
		return x.VideoID
	}
	return ""
}

func (x *Video) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Video) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

type CreateClassRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherID string `protobuf:"bytes,1,opt,name=teacherID,proto3" json:"teacherID,omitempty"`
	SubjectID string `protobuf:"bytes,2,opt,name=subjectID,proto3" json:"subjectID,omitempty"`
}

func (x *CreateClassRoomRequest) Reset() {
	*x = CreateClassRoomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClassRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClassRoomRequest) ProtoMessage() {}

func (x *CreateClassRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClassRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateClassRoomRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{4}
}

func (x *CreateClassRoomRequest) GetTeacherID() string {
	if x != nil {
		return x.TeacherID
	}
	return ""
}

func (x *CreateClassRoomRequest) GetSubjectID() string {
	if x != nil {
		return x.SubjectID
	}
	return ""
}

type CreateClassRoomsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeacherID  string   `protobuf:"bytes,1,opt,name=teacherID,proto3" json:"teacherID,omitempty"`
	SubjectIDs []string `protobuf:"bytes,2,rep,name=subjectIDs,proto3" json:"subjectIDs,omitempty"`
}

func (x *CreateClassRoomsRequest) Reset() {
	*x = CreateClassRoomsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateClassRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateClassRoomsRequest) ProtoMessage() {}

func (x *CreateClassRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateClassRoomsRequest.ProtoReflect.Descriptor instead.
func (*CreateClassRoomsRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{5}
}

func (x *CreateClassRoomsRequest) GetTeacherID() string {
	if x != nil {
		return x.TeacherID
	}
	return ""
}

func (x *CreateClassRoomsRequest) GetSubjectIDs() []string {
	if x != nil {
		return x.SubjectIDs
	}
	return nil
}

type ClassRoom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassRoomID  string  `protobuf:"bytes,1,opt,name=classRoomID,proto3" json:"classRoomID,omitempty"`
	Title        string  `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Image        string  `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Price        int32   `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Badge        string  `protobuf:"bytes,5,opt,name=badge,proto3" json:"badge,omitempty"`
	StudentCount int32   `protobuf:"varint,6,opt,name=studentCount,proto3" json:"studentCount,omitempty"`
	Rating       float32 `protobuf:"fixed32,7,opt,name=Rating,proto3" json:"Rating,omitempty"`
	ArabicTitle  string  `protobuf:"bytes,8,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	Description  string  `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *ClassRoom) Reset() {
	*x = ClassRoom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassRoom) ProtoMessage() {}

func (x *ClassRoom) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassRoom.ProtoReflect.Descriptor instead.
func (*ClassRoom) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{6}
}

func (x *ClassRoom) GetClassRoomID() string {
	if x != nil {
		return x.ClassRoomID
	}
	return ""
}

func (x *ClassRoom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ClassRoom) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ClassRoom) GetPrice() int32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ClassRoom) GetBadge() string {
	if x != nil {
		return x.Badge
	}
	return ""
}

func (x *ClassRoom) GetStudentCount() int32 {
	if x != nil {
		return x.StudentCount
	}
	return 0
}

func (x *ClassRoom) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ClassRoom) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *ClassRoom) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ClassRooms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Classrooms []*ClassRoom `protobuf:"bytes,1,rep,name=classrooms,proto3" json:"classrooms,omitempty"`
}

func (x *ClassRooms) Reset() {
	*x = ClassRooms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassRooms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassRooms) ProtoMessage() {}

func (x *ClassRooms) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassRooms.ProtoReflect.Descriptor instead.
func (*ClassRooms) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{7}
}

func (x *ClassRooms) GetClassrooms() []*ClassRoom {
	if x != nil {
		return x.Classrooms
	}
	return nil
}

type AddDocumentToClassroomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassRoomID string `protobuf:"bytes,1,opt,name=classRoomID,proto3" json:"classRoomID,omitempty"`
}

func (x *AddDocumentToClassroomRequest) Reset() {
	*x = AddDocumentToClassroomRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddDocumentToClassroomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDocumentToClassroomRequest) ProtoMessage() {}

func (x *AddDocumentToClassroomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDocumentToClassroomRequest.ProtoReflect.Descriptor instead.
func (*AddDocumentToClassroomRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{8}
}

func (x *AddDocumentToClassroomRequest) GetClassRoomID() string {
	if x != nil {
		return x.ClassRoomID
	}
	return ""
}

type Lesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonID    string `protobuf:"bytes,1,opt,name=lessonID,proto3" json:"lessonID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,3,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Lesson) Reset() {
	*x = Lesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lesson) ProtoMessage() {}

func (x *Lesson) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lesson.ProtoReflect.Descriptor instead.
func (*Lesson) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{9}
}

func (x *Lesson) GetLessonID() string {
	if x != nil {
		return x.LessonID
	}
	return ""
}

func (x *Lesson) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Lesson) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *Lesson) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Lessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons []*Lesson `protobuf:"bytes,1,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *Lessons) Reset() {
	*x = Lessons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lessons) ProtoMessage() {}

func (x *Lessons) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lessons.ProtoReflect.Descriptor instead.
func (*Lessons) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{10}
}

func (x *Lessons) GetLessons() []*Lesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type StudentLesson struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lesson    *Lesson `protobuf:"bytes,1,opt,name=lesson,proto3" json:"lesson,omitempty"`
	CanAccess bool    `protobuf:"varint,2,opt,name=canAccess,proto3" json:"canAccess,omitempty"`
}

func (x *StudentLesson) Reset() {
	*x = StudentLesson{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentLesson) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentLesson) ProtoMessage() {}

func (x *StudentLesson) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentLesson.ProtoReflect.Descriptor instead.
func (*StudentLesson) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{11}
}

func (x *StudentLesson) GetLesson() *Lesson {
	if x != nil {
		return x.Lesson
	}
	return nil
}

func (x *StudentLesson) GetCanAccess() bool {
	if x != nil {
		return x.CanAccess
	}
	return false
}

type StudentLessons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lessons []*StudentLesson `protobuf:"bytes,1,rep,name=lessons,proto3" json:"lessons,omitempty"`
}

func (x *StudentLessons) Reset() {
	*x = StudentLessons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StudentLessons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StudentLessons) ProtoMessage() {}

func (x *StudentLessons) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StudentLessons.ProtoReflect.Descriptor instead.
func (*StudentLessons) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{12}
}

func (x *StudentLessons) GetLessons() []*StudentLesson {
	if x != nil {
		return x.Lessons
	}
	return nil
}

type CreateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,2,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	ChapterID   string `protobuf:"bytes,3,opt,name=chapterID,proto3" json:"chapterID,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateLessonRequest) Reset() {
	*x = CreateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateLessonRequest) ProtoMessage() {}

func (x *CreateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateLessonRequest.ProtoReflect.Descriptor instead.
func (*CreateLessonRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{13}
}

func (x *CreateLessonRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateLessonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateLessonRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *CreateLessonRequest) GetChapterID() string {
	if x != nil {
		return x.ChapterID
	}
	return ""
}

func (x *CreateLessonRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateLessonRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonID    string `protobuf:"bytes,5,opt,name=lessonID,proto3" json:"lessonID,omitempty"`
	UserID      string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,2,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	ChapterID   string `protobuf:"bytes,3,opt,name=chapterID,proto3" json:"chapterID,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateLessonRequest) Reset() {
	*x = UpdateLessonRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLessonRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLessonRequest) ProtoMessage() {}

func (x *UpdateLessonRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLessonRequest.ProtoReflect.Descriptor instead.
func (*UpdateLessonRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateLessonRequest) GetLessonID() string {
	if x != nil {
		return x.LessonID
	}
	return ""
}

func (x *UpdateLessonRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateLessonRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateLessonRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *UpdateLessonRequest) GetChapterID() string {
	if x != nil {
		return x.ChapterID
	}
	return ""
}

func (x *UpdateLessonRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UploadVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content  []byte `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
}

func (x *UploadVideoRequest) Reset() {
	*x = UploadVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoRequest) ProtoMessage() {}

func (x *UploadVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoRequest.ProtoReflect.Descriptor instead.
func (*UploadVideoRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{15}
}

func (x *UploadVideoRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UploadVideoRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type Chapters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chapters []*Chapter `protobuf:"bytes,1,rep,name=chapters,proto3" json:"chapters,omitempty"`
}

func (x *Chapters) Reset() {
	*x = Chapters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapters) ProtoMessage() {}

func (x *Chapters) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapters.ProtoReflect.Descriptor instead.
func (*Chapters) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{16}
}

func (x *Chapters) GetChapters() []*Chapter {
	if x != nil {
		return x.Chapters
	}
	return nil
}

type Chapter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterID   string `protobuf:"bytes,1,opt,name=chapterID,proto3" json:"chapterID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,3,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *Chapter) Reset() {
	*x = Chapter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chapter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chapter) ProtoMessage() {}

func (x *Chapter) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chapter.ProtoReflect.Descriptor instead.
func (*Chapter) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{17}
}

func (x *Chapter) GetChapterID() string {
	if x != nil {
		return x.ChapterID
	}
	return ""
}

func (x *Chapter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Chapter) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *Chapter) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateChapterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	ClassRoomID string `protobuf:"bytes,1,opt,name=classRoomID,proto3" json:"classRoomID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,3,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateChapterRequest) Reset() {
	*x = CreateChapterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChapterRequest) ProtoMessage() {}

func (x *CreateChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChapterRequest.ProtoReflect.Descriptor instead.
func (*CreateChapterRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{18}
}

func (x *CreateChapterRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CreateChapterRequest) GetClassRoomID() string {
	if x != nil {
		return x.ClassRoomID
	}
	return ""
}

func (x *CreateChapterRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateChapterRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *CreateChapterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UpdateChapterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChapterID   string `protobuf:"bytes,7,opt,name=chapterID,proto3" json:"chapterID,omitempty"`
	UserID      string `protobuf:"bytes,6,opt,name=userID,proto3" json:"userID,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle string `protobuf:"bytes,3,opt,name=arabicTitle,proto3" json:"arabicTitle,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateChapterRequest) Reset() {
	*x = UpdateChapterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateChapterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateChapterRequest) ProtoMessage() {}

func (x *UpdateChapterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateChapterRequest.ProtoReflect.Descriptor instead.
func (*UpdateChapterRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateChapterRequest) GetChapterID() string {
	if x != nil {
		return x.ChapterID
	}
	return ""
}

func (x *UpdateChapterRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UpdateChapterRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateChapterRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *UpdateChapterRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateDocumentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonID      string `protobuf:"bytes,1,opt,name=lessonID,proto3" json:"lessonID,omitempty"`
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle   string `protobuf:"bytes,3,opt,name=arabic_title,json=arabicTitle,proto3" json:"arabic_title,omitempty"`
	Description   string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LectureNumber int32  `protobuf:"varint,5,opt,name=lecture_number,json=lectureNumber,proto3" json:"lecture_number,omitempty"`
}

func (x *CreateDocumentRequest) Reset() {
	*x = CreateDocumentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDocumentRequest) ProtoMessage() {}

func (x *CreateDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDocumentRequest.ProtoReflect.Descriptor instead.
func (*CreateDocumentRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{20}
}

func (x *CreateDocumentRequest) GetLessonID() string {
	if x != nil {
		return x.LessonID
	}
	return ""
}

func (x *CreateDocumentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateDocumentRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *CreateDocumentRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDocumentRequest) GetLectureNumber() int32 {
	if x != nil {
		return x.LectureNumber
	}
	return 0
}

type CreateVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LessonID      string              `protobuf:"bytes,2,opt,name=lessonID,proto3" json:"lessonID,omitempty"`
	Title         string              `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle   string              `protobuf:"bytes,5,opt,name=arabic_title,json=arabicTitle,proto3" json:"arabic_title,omitempty"`
	Description   string              `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	LectureNumber int32               `protobuf:"varint,8,opt,name=lecture_number,json=lectureNumber,proto3" json:"lecture_number,omitempty"`
	Video         *UploadVideoRequest `protobuf:"bytes,9,opt,name=video,proto3" json:"video,omitempty"`
}

func (x *CreateVideoRequest) Reset() {
	*x = CreateVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoRequest) ProtoMessage() {}

func (x *CreateVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoRequest.ProtoReflect.Descriptor instead.
func (*CreateVideoRequest) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{21}
}

func (x *CreateVideoRequest) GetLessonID() string {
	if x != nil {
		return x.LessonID
	}
	return ""
}

func (x *CreateVideoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateVideoRequest) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *CreateVideoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateVideoRequest) GetLectureNumber() int32 {
	if x != nil {
		return x.LectureNumber
	}
	return 0
}

func (x *CreateVideoRequest) GetVideo() *UploadVideoRequest {
	if x != nil {
		return x.Video
	}
	return nil
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocumentID    string `protobuf:"bytes,1,opt,name=documentID,proto3" json:"documentID,omitempty"`
	DocumentType  string `protobuf:"bytes,3,opt,name=documentType,proto3" json:"documentType,omitempty"`
	Title         string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	ArabicTitle   string `protobuf:"bytes,5,opt,name=arabic_title,json=arabicTitle,proto3" json:"arabic_title,omitempty"`
	Description   string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Duration      int32  `protobuf:"varint,7,opt,name=duration,proto3" json:"duration,omitempty"`
	LectureNumber int32  `protobuf:"varint,8,opt,name=lecture_number,json=lectureNumber,proto3" json:"lecture_number,omitempty"`
	DocumentLink  string `protobuf:"bytes,9,opt,name=DocumentLink,proto3" json:"DocumentLink,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{22}
}

func (x *Document) GetDocumentID() string {
	if x != nil {
		return x.DocumentID
	}
	return ""
}

func (x *Document) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Document) GetArabicTitle() string {
	if x != nil {
		return x.ArabicTitle
	}
	return ""
}

func (x *Document) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Document) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Document) GetLectureNumber() int32 {
	if x != nil {
		return x.LectureNumber
	}
	return 0
}

func (x *Document) GetDocumentLink() string {
	if x != nil {
		return x.DocumentLink
	}
	return ""
}

type Documents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *Documents) Reset() {
	*x = Documents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_learning_learning_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Documents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Documents) ProtoMessage() {}

func (x *Documents) ProtoReflect() protoreflect.Message {
	mi := &file_api_learning_learning_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Documents.ProtoReflect.Descriptor instead.
func (*Documents) Descriptor() ([]byte, []int) {
	return file_api_learning_learning_proto_rawDescGZIP(), []int{23}
}

func (x *Documents) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

var File_api_learning_learning_proto protoreflect.FileDescriptor

var file_api_learning_learning_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2f, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x2b, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x33, 0x0a, 0x09, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x45, 0x0a, 0x03, 0x50, 0x64, 0x66,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x64, 0x66, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x64, 0x66, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x22, 0x4b, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x54, 0x0a,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x44, 0x22, 0x57, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x73, 0x22, 0x85, 0x02, 0x0a,
	0x09, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x0a, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x1d, 0x41, 0x64, 0x64, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x72, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x22, 0x7e, 0x0a, 0x06, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61,
	0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35, 0x0a, 0x07, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x73, 0x22, 0x57, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65,
	0x73, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x61, 0x6e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x0e, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07,
	0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x07, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x22,
	0xa5, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc1, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61,
	0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x12, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x08, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xaa, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb5, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x65, 0x73, 0x73, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x65, 0x73, 0x73, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x65, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x22, 0x90, 0x02,
	0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x72, 0x61, 0x62, 0x69, 0x63, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x72, 0x61, 0x62,
	0x69, 0x63, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c,
	0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x22, 0x3d, 0x0a, 0x09, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0xeb, 0x09, 0x0a, 0x0f, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x21, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f,
	0x6f, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x20, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f, 0x6d,
	0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x00, 0x12, 0x4d, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x52, 0x6f, 0x6f, 0x6d, 0x73, 0x42, 0x79, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x42, 0x79, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x6f, 0x6f,
	0x6d, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e,
	0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x70,
	0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73,
	0x6f, 0x6e, 0x73, 0x42, 0x79, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x11, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x2e, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x12, 0x13, 0x2e, 0x6c,
	0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x65, 0x73, 0x73, 0x6f, 0x6e, 0x73, 0x42, 0x79, 0x53, 0x74,
	0x75, 0x64, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x6c, 0x65, 0x61,
	0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x73,
	0x73, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1c, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x14, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x79, 0x4c, 0x65, 0x73, 0x73, 0x6f,
	0x6e, 0x12, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2e, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x00, 0x42, 0x34, 0x5a,
	0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x65, 0x73, 0x2d,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x2d, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6c, 0x65, 0x61, 0x72, 0x6e,
	0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_learning_learning_proto_rawDescOnce sync.Once
	file_api_learning_learning_proto_rawDescData = file_api_learning_learning_proto_rawDesc
)

func file_api_learning_learning_proto_rawDescGZIP() []byte {
	file_api_learning_learning_proto_rawDescOnce.Do(func() {
		file_api_learning_learning_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_learning_learning_proto_rawDescData)
	})
	return file_api_learning_learning_proto_rawDescData
}

var file_api_learning_learning_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_api_learning_learning_proto_goTypes = []interface{}{
	(*OperationStatus)(nil),               // 0: learning.OperationStatus
	(*IDRequest)(nil),                     // 1: learning.IDRequest
	(*Pdf)(nil),                           // 2: learning.Pdf
	(*Video)(nil),                         // 3: learning.Video
	(*CreateClassRoomRequest)(nil),        // 4: learning.CreateClassRoomRequest
	(*CreateClassRoomsRequest)(nil),       // 5: learning.CreateClassRoomsRequest
	(*ClassRoom)(nil),                     // 6: learning.ClassRoom
	(*ClassRooms)(nil),                    // 7: learning.ClassRooms
	(*AddDocumentToClassroomRequest)(nil), // 8: learning.AddDocumentToClassroomRequest
	(*Lesson)(nil),                        // 9: learning.Lesson
	(*Lessons)(nil),                       // 10: learning.Lessons
	(*StudentLesson)(nil),                 // 11: learning.StudentLesson
	(*StudentLessons)(nil),                // 12: learning.StudentLessons
	(*CreateLessonRequest)(nil),           // 13: learning.CreateLessonRequest
	(*UpdateLessonRequest)(nil),           // 14: learning.UpdateLessonRequest
	(*UploadVideoRequest)(nil),            // 15: learning.UploadVideoRequest
	(*Chapters)(nil),                      // 16: learning.Chapters
	(*Chapter)(nil),                       // 17: learning.Chapter
	(*CreateChapterRequest)(nil),          // 18: learning.CreateChapterRequest
	(*UpdateChapterRequest)(nil),          // 19: learning.UpdateChapterRequest
	(*CreateDocumentRequest)(nil),         // 20: learning.CreateDocumentRequest
	(*CreateVideoRequest)(nil),            // 21: learning.CreateVideoRequest
	(*Document)(nil),                      // 22: learning.Document
	(*Documents)(nil),                     // 23: learning.Documents
}
var file_api_learning_learning_proto_depIdxs = []int32{
	6,  // 0: learning.ClassRooms.classrooms:type_name -> learning.ClassRoom
	9,  // 1: learning.Lessons.lessons:type_name -> learning.Lesson
	9,  // 2: learning.StudentLesson.lesson:type_name -> learning.Lesson
	11, // 3: learning.StudentLessons.lessons:type_name -> learning.StudentLesson
	17, // 4: learning.Chapters.chapters:type_name -> learning.Chapter
	15, // 5: learning.CreateVideoRequest.video:type_name -> learning.UploadVideoRequest
	22, // 6: learning.Documents.documents:type_name -> learning.Document
	5,  // 7: learning.LearningService.CreateClassRooms:input_type -> learning.CreateClassRoomsRequest
	4,  // 8: learning.LearningService.CreateClassRoom:input_type -> learning.CreateClassRoomRequest
	1,  // 9: learning.LearningService.GetClassRooms:input_type -> learning.IDRequest
	1,  // 10: learning.LearningService.GetMyClassRooms:input_type -> learning.IDRequest
	1,  // 11: learning.LearningService.GetClassRoom:input_type -> learning.IDRequest
	1,  // 12: learning.LearningService.DeleteClassRoom:input_type -> learning.IDRequest
	1,  // 13: learning.LearningService.DeleteClassRoomsByTeacher:input_type -> learning.IDRequest
	18, // 14: learning.LearningService.CreateChapter:input_type -> learning.CreateChapterRequest
	1,  // 15: learning.LearningService.GetChaptersByClassRoom:input_type -> learning.IDRequest
	19, // 16: learning.LearningService.UpdateChapter:input_type -> learning.UpdateChapterRequest
	1,  // 17: learning.LearningService.DeleteChapter:input_type -> learning.IDRequest
	1,  // 18: learning.LearningService.GetLessonsByChapter:input_type -> learning.IDRequest
	13, // 19: learning.LearningService.CreateLesson:input_type -> learning.CreateLessonRequest
	14, // 20: learning.LearningService.UpdateLesson:input_type -> learning.UpdateLessonRequest
	1,  // 21: learning.LearningService.DeleteLesson:input_type -> learning.IDRequest
	1,  // 22: learning.LearningService.GetLessonsByStudent:input_type -> learning.IDRequest
	21, // 23: learning.LearningService.CreateVideo:input_type -> learning.CreateVideoRequest
	1,  // 24: learning.LearningService.GetDocumentsByLesson:input_type -> learning.IDRequest
	0,  // 25: learning.LearningService.CreateClassRooms:output_type -> learning.OperationStatus
	6,  // 26: learning.LearningService.CreateClassRoom:output_type -> learning.ClassRoom
	7,  // 27: learning.LearningService.GetClassRooms:output_type -> learning.ClassRooms
	7,  // 28: learning.LearningService.GetMyClassRooms:output_type -> learning.ClassRooms
	6,  // 29: learning.LearningService.GetClassRoom:output_type -> learning.ClassRoom
	0,  // 30: learning.LearningService.DeleteClassRoom:output_type -> learning.OperationStatus
	0,  // 31: learning.LearningService.DeleteClassRoomsByTeacher:output_type -> learning.OperationStatus
	17, // 32: learning.LearningService.CreateChapter:output_type -> learning.Chapter
	16, // 33: learning.LearningService.GetChaptersByClassRoom:output_type -> learning.Chapters
	17, // 34: learning.LearningService.UpdateChapter:output_type -> learning.Chapter
	0,  // 35: learning.LearningService.DeleteChapter:output_type -> learning.OperationStatus
	10, // 36: learning.LearningService.GetLessonsByChapter:output_type -> learning.Lessons
	9,  // 37: learning.LearningService.CreateLesson:output_type -> learning.Lesson
	9,  // 38: learning.LearningService.UpdateLesson:output_type -> learning.Lesson
	0,  // 39: learning.LearningService.DeleteLesson:output_type -> learning.OperationStatus
	12, // 40: learning.LearningService.GetLessonsByStudent:output_type -> learning.StudentLessons
	22, // 41: learning.LearningService.CreateVideo:output_type -> learning.Document
	23, // 42: learning.LearningService.GetDocumentsByLesson:output_type -> learning.Documents
	25, // [25:43] is the sub-list for method output_type
	7,  // [7:25] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_api_learning_learning_proto_init() }
func file_api_learning_learning_proto_init() {
	if File_api_learning_learning_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_learning_learning_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pdf); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClassRoomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateClassRoomsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassRoom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassRooms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddDocumentToClassroomRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lessons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentLesson); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StudentLessons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLessonRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chapter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChapterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateChapterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDocumentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_learning_learning_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Documents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_learning_learning_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_learning_learning_proto_goTypes,
		DependencyIndexes: file_api_learning_learning_proto_depIdxs,
		MessageInfos:      file_api_learning_learning_proto_msgTypes,
	}.Build()
	File_api_learning_learning_proto = out.File
	file_api_learning_learning_proto_rawDesc = nil
	file_api_learning_learning_proto_goTypes = nil
	file_api_learning_learning_proto_depIdxs = nil
}
